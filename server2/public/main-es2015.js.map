{"version":3,"sources":["/Users/idanyadgar/Documents/class-projects/memez/shared/isProduction.ts","./$_lazy_route_resource lazy namespace object","./src/app/adapters/auth.adapter.ts","./src/app/adapters/base-ajax.adapter.ts","./src/app/adapters/base-socket-adapter.service.ts","./src/app/adapters/like.adapter.ts","./src/app/adapters/login.adapter.ts","./src/app/adapters/post.adapter.ts","./src/app/adapters/upload.adapter.ts","./src/app/adapters/user.adapter.ts","./src/app/app-routing.module.ts","./src/app/app.module.ts","./src/app/components/like-dialog-box/like-dialog-box.component.ts","./src/app/components/like-dialog-box/like-dialog-box.component.html","./src/app/components/post-box/post-box.component.ts","./src/app/components/post-box/post-box.component.html","./src/app/components/post-dialog-box/post-dialog-box.component.ts","./src/app/components/post-dialog-box/post-dialog-box.component.html","./src/app/components/post-edit-dialog/post-edit-dialog.component.ts","./src/app/components/post-edit-dialog/post-edit-dialog.component.html","./src/app/components/post-img-dialog/post-img-dialog.component.ts","./src/app/components/post-img-dialog/post-img-dialog.component.html","./src/app/components/post/post.component.ts","./src/app/components/post/post.component.html","./src/app/components/profile-img/profile-img.component.ts","./src/app/components/profile-img/profile-img.component.html","./src/app/services/auth-guard.service.ts","./src/app/stores/entities/like.store.ts","./src/app/stores/entities/post.store.ts","./src/app/stores/entities/user.store.ts","./src/app/stores/root.store.ts","./src/app/stores/upload.store.ts","./src/app/stores/views/auth.store.ts","./src/app/stores/views/feed.store.ts","./src/app/stores/views/layout.store.ts","./src/app/stores/views/login.store.ts","./src/app/stores/views/signup.store.ts","./src/app/views/feed/feed.component.ts","./src/app/views/feed/feed.component.html","./src/app/views/layout/layout.component.ts","./src/app/views/layout/layout.component.html","./src/app/views/layout/navbar/navbar.component.ts","./src/app/views/layout/navbar/navbar.component.html","./src/app/views/login/login.component.ts","./src/app/views/login/login.component.html","./src/app/views/sign-up/sign-up.component.ts","./src/app/views/sign-up/sign-up.component.html","./src/app/views/user-profile/user-profile.component.ts","./src/app/views/user-profile/user-profile.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["export const isProduction: boolean = false\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","//region imports\nimport {Injectable}      from \"@angular/core\";\nimport {BaseAjaxAdapter} from \"./base-ajax.adapter\";\nimport {HttpClient}      from \"@angular/common/http\";\nimport {IUser}           from \"../../../../../../../shared/types/Entities/IUser\";\n\n//endregion\n\n\n@Injectable({\n  providedIn: \"root\"\n})\n\nexport class AuthAdapter extends BaseAjaxAdapter {\n  constructor(http: HttpClient) {\n    super(http);\n  }\n\n  async isAuthenticated(): Promise<boolean> {\n    return this.request('isAuthenticated')\n  }\n\n  async getCurrentUser(): Promise<IUser> {\n    return this.request('currentuser')\n  }\n}\n","//region imports\nimport {HttpClient}   from '@angular/common/http';\nimport {APIEvent}     from \"../../../../../../../shared/types/api/api-event\";\nimport {isProduction} from \"../../../../../../../shared/isProduction\";\n\n\n//endregion\nexport interface IBaseAdapter {\n  request<T>(event: APIEvent, data: any): Promise<T>;\n\n  listenToEvent<T = any>(event_name: APIEvent, fn: Function): void\n\n  stopListeningToEvent<T = any>(event_name: APIEvent): void\n\n  // post<T>(path: string, body: string): Promise<T>\n\n  // delete<T>(path: string): Promise<any>\n\n  // update<T>(path: string, body): Promise<T>\n}\n\nexport abstract class BaseAjaxAdapter implements IBaseAdapter {\n  BASE_URL = isProduction ? 'http://ec2-34-211-177-84.us-west-2.compute.amazonaws.com:4000/api'\n                          : 'http://localhost:4000/api';\n\n  protected constructor(\n    private http: HttpClient,\n  ) {\n\n  }\n\n  async request<T>(path: string): Promise<T> {\n    return this.http\n      .get<T>(`${this.BASE_URL}/${path}`, {withCredentials: true})\n      .toPromise<T>();\n  }\n\n  async post(path: string, body: string): Promise<any> {\n    return this.http\n      .post(`${this.BASE_URL}/${path}`, body, {withCredentials: true})\n      .toPromise()\n  }\n\n  async delete(path: string): Promise<any> {\n    return this.http\n      .delete(`${this.BASE_URL}/${path}`)\n      .toPromise()\n  }\n\n  async update(path: string, body): Promise<any> {\n    return this.http\n      .put(`${this.BASE_URL}/${path}`, body)\n      .toPromise()\n  }\n\n  listenToEvent<T = any>(event_name: APIEvent, fn: Function): void {\n    return;\n  }\n\n  stopListeningToEvent<T = any>(event_name: APIEvent): void {\n    return;\n  }\n}\n","//region imports\nimport * as io                    from 'socket.io-client';\nimport {Socket as SocketIOClient} from 'socket.io-client';\nimport {Injectable}               from \"@angular/core\";\nimport {v4 as uuidv4}             from \"uuid\";\nimport {IBaseAdapter}             from \"./base-ajax.adapter\";\nimport Emitter                    from 'component-emitter';\nimport {APIEvent}                 from \"../../../../../../../shared/types/api/api-event\";\nimport {isProduction}             from \"../../../../../../../shared/isProduction\";\n\n//endregion\n\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class BaseSocketAdapter implements IBaseAdapter {\n  socket: SocketIOClient;\n  user;\n  BASE_URL = isProduction ? 'http://ec2-34-211-177-84.us-west-2.compute.amazonaws.com:4000'\n                          : 'http://localhost:4000';\n\n  constructor() {\n\n\n    // @ts-ignore\n    this.socket = io(this.BASE_URL, {transports: ['websocket'], upgrade: false});\n\n    this.socket.on(\"connect\", () => {\n        console.log(\"SOCKET CONNECTED!!\");\n      }\n    );\n    this.socket.on(\"reconnect\", () => {\n        console.log(\"SOCKET RECONNECTED!!\");\n      }\n    );\n    this.socket.on(\"disconnect\", () => {\n        console.log(\"SOCKET DISCONNECTED :(\");\n      }\n    );\n\n\n  }\n\n  async request<T = any>(event_name: APIEvent, data?) {\n\n    return new Promise<T>((resolve, reject) => {\n      const req_id = uuidv4();\n\n      if (this.socket && this.socket.connected) {\n        console.log(`client: sendMessage emitting event_name ${event_name} with id ${req_id} with data`, data);\n        this.socket.emit(event_name, JSON.stringify(data), req_id);\n\n        let emitter: Emitter;\n\n        const\n          fn = (res_data, request_id) => {\n            if (request_id !== req_id) {\n              return\n            }\n\n            resolve(res_data as T);\n            emitter.off(event_name, fn);\n          };\n\n        emitter = this.socket.on(event_name, fn);\n\n      } else {\n        console.log(\"SocketAPI: no sockets connected...\");\n      }\n    })\n\n  }\n\n  listenToEvent<T = any>(event_name: APIEvent, fn: Function) {\n    this.socket && this.socket.on(event_name, fn)\n\n  }\n\n  async stopListeningToEvent<T = any>(event_name: APIEvent) {\n    this.socket && this.socket.off(event_name)\n\n  }\n\n}\n\n\n// userStore      postsStore\n// userAdapter   postsAdapter\n// socketAPI\n","//region imports\nimport {Injectable}        from '@angular/core';\nimport {ILike}             from '../../../../../../../shared/types/Entities/ILike';\nimport {IlikeResponse}     from \"../../../../../../../shared/types/Entities/IlikeResponse\";\nimport {BaseSocketAdapter} from \"./base-socket-adapter.service\";\n\n//endregion\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LikeAdapter  {\n\n  constructor(private socketAdapter : BaseSocketAdapter) {\n\n    window['likeAdapter'] = this;\n  }\n\n  async getPostLikes(post_id: string): Promise<ILike[]> {\n    return this.socketAdapter.request<ILike[]>(`getPostLikes`, {post_id});\n  }\n\n  async createLike(likeData): Promise<IlikeResponse> {\n    return this.socketAdapter.request('createLike', likeData)\n  }\n\n  async unlike(likeId: string): Promise<IlikeResponse> {\n    return this.socketAdapter.request(`unlike`, {id: likeId})\n  }\n\n  async getLikes() {\n    return await this.socketAdapter.request('getLikes');\n  }\n\n  async getUserLikes(user_id: string): Promise<ILike[]> {\n    return await this.socketAdapter.request(`getUserLikes`, {user_id})\n  }\n\n\n}\n","//region imports\nimport {Injectable}      from '@angular/core';\nimport {BaseAjaxAdapter} from './base-ajax.adapter';\nimport {HttpClient}      from '@angular/common/http';\n//endregion\n \n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginAdapter extends BaseAjaxAdapter {\n\n  constructor(\n    http: HttpClient,\n  ) {\n    super(http);\n\n    window['loginAdapter'] = this;\n  }\n\n  async login(loginDetails) {\n\n    return this.post('login', loginDetails)\n  }\n\n  async logout() {\n    return this.request('logout');\n  }\n\n\n}\n","//region imports\nimport {Injectable}        from '@angular/core';\nimport {BaseAjaxAdapter}   from './base-ajax.adapter';\nimport {IPost}             from '../../../../../../../shared/types/Entities/IPost';\nimport {HttpClient}        from '@angular/common/http';\nimport {BaseSocketAdapter} from \"./base-socket-adapter.service\";\n\n//endregion\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostAdapter {\n\n\n  constructor(public socketAdapter: BaseSocketAdapter) {\n\n    window['PostAdapter'] = this;\n  }\n\n  async getPosts(): Promise<IPost[]> {\n    return this.socketAdapter.request<IPost[]>('getPosts');\n  }\n\n  async createPost(user_id: string, content: string, postMeme: string): Promise<IPost> {\n    console.log('postAdapter');\n    console.log(content, 'content');\n    return this.socketAdapter.request('createPost',\n      {\n        user_id  : user_id\n        , content: content,\n        postMeme : postMeme\n      })\n\n  }\n\n  async deletePost(post_id: string): Promise<IPost> {\n    return this.socketAdapter.request('deletePost', {id: post_id})\n  }\n\n\n  async updatePostContent(post_id: string, content: string) {\n\n    return this.socketAdapter.request<IPost>(\"updatePost\", {id: post_id, content})\n  }\n\n\n\n}\n","//region imports\nimport {Injectable}      from \"@angular/core\";\nimport {BaseAjaxAdapter} from \"./base-ajax.adapter\";\nimport {HttpClient}      from \"@angular/common/http\";\n//endregion\n\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UploadAdapter extends BaseAjaxAdapter {\n  constructor(http: HttpClient) {\n    super(http);\n\n  }\n\n  async uploadPhoto(file): Promise<any> {\n    return this.post('uploadphoto', file);\n  }\n\n}\n","//region imports\nimport {Injectable}              from '@angular/core';\nimport {BaseAjaxAdapter}         from './base-ajax.adapter';\nimport {IUser}                   from '../../../../../../../shared/types/Entities/IUser';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {BaseSocketAdapter}       from \"./base-socket-adapter.service\";\nimport {IUserResponse}           from \"../../../../../../../shared/types/Entities/IUserResponse\";\n\n//endregion\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserAdapter  {\n\n\n  constructor(public socketAdapter : BaseSocketAdapter) {\n\n\n    window['UserAdapter'] = this;\n  }\n\n  async getUsers(): Promise<IUser[]> {\n    return this.socketAdapter.request('getUsers');\n  }\n\n  async createNewUser(userName): Promise<IUserResponse> {\n    return this.socketAdapter.request('createUser', userName);\n\n  }\n\n  async updateUserPhoto(user_id: string, avatarUrl: string) {\n    return this.socketAdapter.request(`updateUserPhoto`, {id: user_id, avatar: avatarUrl})\n  }\n\n\n}\n","//region imports\nimport {NgModule}             from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {FeedComponent}        from './views/feed/feed.component';\nimport {UserProfileComponent} from './views/user-profile/user-profile.component';\nimport {LoginComponent}       from './views/login/login.component';\nimport {SignUpComponent}      from \"./views/sign-up/sign-up.component\";\nimport {AuthGuardService}     from \"./services/auth-guard.service\";\n//endregion\n\n\n\nconst routes: Routes = [\n  {\n    path     : '',\n    component: LoginComponent,\n    canActivate : [AuthGuardService]\n\n  },\n  {\n    path     : 'login',\n    component: LoginComponent\n  },\n  {\n    path       : 'feed',\n    component  : FeedComponent,\n    canActivate: [AuthGuardService]\n  },\n  {\n    path       : 'profile',\n    component  : UserProfileComponent,\n    canActivate: [AuthGuardService]\n  },\n  {\n    path     : 'signup',\n    component: SignUpComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","//region imports\nimport {BrowserModule}                    from '@angular/platform-browser';\nimport {NgModule}                         from '@angular/core';\nimport {AppRoutingModule}                 from './app-routing.module';\nimport {LayoutComponent}                  from './views/layout/layout.component';\nimport {FeedComponent}                    from './views/feed/feed.component';\nimport {UserProfileComponent}             from './views/user-profile/user-profile.component';\nimport {PostComponent}                    from './components/post/post.component';\nimport {HttpClientModule}                 from '@angular/common/http';\nimport {MobxAngularModule}                from 'mobx-angular';\nimport {NavbarComponent}                  from './views/layout/navbar/navbar.component';\nimport {PostBoxComponent}                 from './components/post-box/post-box.component';\nimport {BrowserAnimationsModule}          from '@angular/platform-browser/animations';\nimport {LoginComponent}                   from './views/login/login.component';\nimport {MatButtonModule}                  from '@angular/material/button';\nimport {LikeDialogBoxComponent}           from './components/like-dialog-box/like-dialog-box.component';\nimport {SignUpComponent}                  from './views/sign-up/sign-up.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {ProfileImgComponent}              from './components/profile-img/profile-img.component';\nimport {MatIconModule}                    from \"@angular/material/icon\";\nimport {MatDialogModule}                  from \"@angular/material/dialog\";\nimport {MatMenuModule}                    from \"@angular/material/menu\";\nimport {MatFormFieldModule}               from \"@angular/material/form-field\";\nimport {PostDialogBoxComponent}           from './components/post-dialog-box/post-dialog-box.component';\nimport {MatInputModule}                   from \"@angular/material/input\";\nimport {PostImgDialogComponent}           from \"./components/post-img-dialog/post-img-dialog.component\";\nimport {MatProgressSpinnerModule}         from \"@angular/material/progress-spinner\";\nimport { PostEditDialogComponent } from './components/post-edit-dialog/post-edit-dialog.component';\n\n\n//endregion\n\n\n@NgModule({\n  declarations: [\n    LayoutComponent,\n    FeedComponent,\n    UserProfileComponent,\n    PostComponent,\n    NavbarComponent,\n    PostBoxComponent,\n    LoginComponent,\n    LikeDialogBoxComponent,\n    SignUpComponent,\n    ProfileImgComponent,\n    PostDialogBoxComponent,\n    PostImgDialogComponent,\n    PostEditDialogComponent\n\n\n  ],\n  imports     : [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    MobxAngularModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatProgressSpinnerModule\n\n\n  ],\n  providers   : [],\n  bootstrap   : [LayoutComponent]\n})\nexport class AppModule {\n}\n","//region imports\nimport {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA}           from '@angular/material/dialog';\nimport {ILike}                     from \"../../../../../../../../shared/types/Entities/ILike\";\n\n//endregion\n\n\n@Component({\n  selector   : 'mem-dialog-box',\n  templateUrl: './like-dialog-box.component.html',\n  styleUrls  : ['./like-dialog-box.component.css']\n})\nexport class LikeDialogBoxComponent implements OnInit {\n\n\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public likes: ILike[]) {\n    window['likeDialogBox'] = this;\n\n  }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<ul class=\"liked-user-list\"\n\n>\n  <li *ngFor=\"let like of likes\"\n      class=\"liked-user\">\n    <div class=\"like-user-name\">{{like.user_id.name}}</div>\n    <span class=\"like-timestamp\">{{like.created}}</span>\n  </li>\n\n</ul>\n\n\n\n","//region imports\nimport {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n//endregion\n\n\n@Component({\n  selector   : 'mem-post-box',\n  templateUrl: './post-box.component.html',\n  styleUrls  : ['./post-box.component.css']\n})\nexport class PostBoxComponent implements OnInit {\n  @Output() newPost = new EventEmitter();\n  @Output() imgUpload = new EventEmitter();\n\n  @Input() currentUserPhoto: string;\n  @Input() postImgUrl: string\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  postToFeed(val) {\n    this.newPost.emit(val);\n  }\n\n  onImgUpload(uploadEvent) {\n    this.imgUpload.emit(uploadEvent)\n  }\n\n}\n","<div class=\"post-box\">\n\n\n  <div class=\"post-box-input\">\n    <div class=post-meme-input>\n      <input #post_input\n             class=\"post-input post-box-input-input\" type=\"text\" placeholder=\"write something...\">\n      <input\n        type=\"file\"\n        id=\"upload-btn\"\n        (change)=\"onImgUpload($event)\"\n        hidden>\n      <label\n        class=\"upload-btn\"\n        for=\"upload-btn\">\n        <img class=\"upload-img\"\n             src=\"./assets/svg's/up-arrow.svg\">\n      </label>\n    </div>\n    <div class=\"post-box-btn btn\" (click)=\"postToFeed(post_input.value)\">\n      POST\n    </div>\n  </div>\n\n\n\n</div>\n\n\n","import {Component, Inject, OnInit}     from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\n\n@Component({\n  selector   : 'mem-post-dialog-box',\n  templateUrl: './post-dialog-box.component.html',\n  styleUrls  : ['./post-dialog-box.component.css']\n})\nexport class PostDialogBoxComponent implements OnInit {\n\n\n  constructor(\n    private dialogRef: MatDialogRef<PostDialogBoxComponent>,\n    @Inject(MAT_DIALOG_DATA) public url: string\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  close(value) {\n    this.dialogRef.close(value)\n  }\n\n}\n","<div class=\"post-dialog-box-wrapper\">\n  <mat-form-field floatLabel=\"auto\">\n    <textarea matInput\n              placeholder=\"write something...\"\n              id=\"dialog-input\"\n              #post_input\n              class=\"post-input post-dialog-input\" type=\"text\">\n   </textarea>\n  </mat-form-field>\n\n  <div *mobxAutorun class=\"post-img-wrapper\">\n    <img class=\"post-img\" [src]=\"url\">\n  </div>\n  <div class=\"post-box-btn btn\" (click)=\"close(post_input.value)\">\n    POST\n  </div>\n</div>\n","import {Component, Inject, OnInit}     from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {IPost}                         from \"../../../../../../../../shared/types/Entities/IPost\";\n\n@Component({\n  selector   : 'mem-post-edit-dialog',\n  templateUrl: './post-edit-dialog.component.html',\n  styleUrls  : ['./post-edit-dialog.component.css']\n})\nexport class PostEditDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<PostEditDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public post: IPost) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  close(value) {\n    this.dialogRef.close(value)\n  }\n\n\n}\n","<mat-form-field floatLabel=\"auto\">\n    <textarea matInput\n              placeholder=\"write something...\"\n              id=\"dialog-input\"\n              #post_input\n              class=\"post-input post-dialog-input\" type=\"text\">\n  {{post.content}}\n   </textarea>\n</mat-form-field>\n\n<div class=\"post-box-btn btn\" (click)=\"close(post_input.value)\">\n  POST\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA}           from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'mem-post-img-dialog',\n  templateUrl: './post-img-dialog.component.html',\n  styleUrls: ['./post-img-dialog.component.css']\n})\nexport class PostImgDialogComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public memeUrl: string) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"post-img-wrapper\">\n  <img class=\"post-img\" [src]=\"memeUrl\">\n</div>\n","//region imports\nimport {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {IPost}                                          from '../../../../../../../../shared/types/Entities/IPost';\nimport {IUser}                                          from \"../../../../../../../../shared/types/Entities/IUser\";\nimport * as dayjs                                       from \"dayjs\";\n\n//endregion\n\n\n@Component({\n\tselector   : 'mem-post',\n\ttemplateUrl: './post.component.html',\n\tstyleUrls  : ['./post.component.css'],\n\n})\nexport class PostComponent implements OnInit {\n\t@Input() post: IPost;\n\t@Input() currentUser: IUser\n\t@Output() postDeleted = new EventEmitter();\n\t@Output() postLiked = new EventEmitter();\n\t@Output() dashboardClicked = new EventEmitter();\n\t@Output() imgClicked = new EventEmitter()\n\t@Output() editClicked = new EventEmitter()\n\n\tpostDate: string\n\tpostTime: string\n\n\n\tisUserPost: boolean;\n\n\tconstructor() {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.postDate = dayjs(this.post.created).format('DD.MM.YYYY');\n\t\tthis.postTime = dayjs(this.post.created).format('HH:mm')\n\n\n\t}\n\n\t//event handler function\n\tonPostDeleted(val: IPost) {\n\t\tthis.postDeleted.emit(val);\n\t}\n\n\tonPostLiked(post: IPost) {\n\t\tthis.postLiked.emit(post);\n\t}\n\n\tonDashboardClicked(post: IPost) {\n\t\tthis.dashboardClicked.emit(post)\n\t}\n\n\tonImgClick(postMeme: string) {\n\t\tthis.imgClicked.emit(postMeme)\n\t}\n\n\tonPostEdit(post: IPost) {\n\t\tthis.editClicked.emit(post)\n\t}\n}\n","<div class=\"post-wrapper\">\n\n  <div class=\"post-profile\">\n\n    <div class=\"post-avatar\">\n      <mem-profile-img\n        [url]=\"post.postedBy.avatar\">\n      </mem-profile-img>\n    </div>\n\n    <div\n      *mobxAutorun\n      class=\"post-user-name\">\n      {{post.postedBy.name}}\n    </div>\n\n    <div class=\"delete-and-date\">\n\n      <div\n        class=\"post-update-dashboards\"\n        *ngIf=\"currentUser._id === post.postedBy._id\">\n\n        <div class=\"edit-btn\"\n             (click)=\"onPostEdit(post)\">\n          <mat-icon\n            class=\"edit-btn\"\n          >edit\n          </mat-icon>\n\n        </div>\n        <div class=\"edit-btn\"\n             (click)=\"onPostDeleted(post)\">\n          <mat-icon class=\"edit-btn\">delete</mat-icon>\n        </div>\n\n      </div>\n\n\n      <div class=\"post-date-time\">\n        <div class=\"post-date\">\n          {{postDate}}\n        </div>\n        <div class=\"post-time\">\n          {{postTime}}\n        </div>\n      </div>\n\n\n    </div>\n\n  </div>\n\n\n  <div\n    *mobxAutorun\n    class=\"post-content\">\n    {{post.content}}\n  </div>\n\n  <div class=\"post-img-wrapper\"\n       *mobxAutorun\n       (click)=\"onImgClick(post.postMeme)\"\n  >\n    <img *ngIf=\"post.postMeme\"\n         [src]=\"post.postMeme\"\n         class=\"post-img\">\n  </div>\n\n  <div class=\"like-dashboard\"\n  >\n    <ng-container *mobxAutorun>\n      <div class=\"like-btn\">\n        <mat-icon (click)=\"onPostLiked(post)\"\n                  [class.current-user-liked]=\" post.likedByCurrentUser\"\n                  class=\"like-icon\">favorite\n        </mat-icon>\n\n      </div>\n    </ng-container>\n    <ng-container *mobxAutorun>\n      <div class=\"likes-amount\"\n           *ngIf=\"post.likes_amount\"\n           (click)=\"onDashboardClicked(post)\">\n        {{post.likes_amount}}\n      </div>\n    </ng-container>\n  </div>\n\n\n</div>\n","//region imports\nimport {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n//endregion\n\n\n@Component({\n  selector   : 'mem-profile-img',\n  templateUrl: './profile-img.component.html',\n  styleUrls  : ['./profile-img.component.css']\n})\nexport class ProfileImgComponent implements OnInit {\n  @Input() url: string\n  @Output() imgClicked = new EventEmitter()\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  onImgClick(imgUrl: string) {\n    this.imgClicked.emit(imgUrl)\n  }\n\n}\n","<div class=\"avatar\"\n     (click)=\"onImgClick(url)\"\n>\n  <img\n    *ngIf=\"!url\"\n    class=\"avatar-img\"\n    src=\"https://storage.googleapis.com/memez-photos/temp-profile.svg\">\n  <img\n    *ngIf=\"url\"\n    class=\"avatar-img\"\n    [src]=url\n\n  >\n</div>\n\n\n","//region imports\nimport {Injectable}          from '@angular/core';\nimport {AuthStore}           from \"../stores/views/auth.store\";\nimport {CanActivate, Router} from \"@angular/router\";\nimport {IAuthResponse}       from \"../../../../../../../shared/types/IAuthResponse\";\n\n//endregion\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(\n    public authStore: AuthStore,\n    public router: Router) {\n  }\n\n  async canActivate(): Promise<boolean> {\n    const auth: boolean = await this.authStore.isAuthenticated()\n\n\n    if (!auth) {\n      await this.router.navigateByUrl('login')\n      return auth\n    }\n    return auth\n  }\n\n\n}\n","//region imports\nimport {Injectable}         from '@angular/core';\nimport {action, observable} from 'mobx-angular';\nimport {ILike}              from '../../../../../../../../shared/types/Entities/ILike';\nimport {RootStore}          from '../root.store';\nimport {IPost}              from '../../../../../../../../shared/types/Entities/IPost';\nimport {IlikeResponse}      from \"../../../../../../../../shared/types/Entities/IlikeResponse\";\nimport {LikeAdapter}        from \"../../adapters/like.adapter\";\nimport {reaction}           from \"mobx\";\n\n//endregion\n\n\n@Injectable({providedIn: 'root'})\n\nexport class LikeStore {\n  @observable currentUserLikes: ILike[] = [];\n\n\n  constructor(\n    public root: RootStore,\n    private likeAdapter: LikeAdapter) {\n    window['likeStore'] = this;\n    this.root.likeStore = this;\n\n    reaction(() => this.root.ps.posts,\n      async () => {\n        let currentUser = this.root.log.currentUser\n        if (currentUser) {\n          await this.getCurrentUserLikes(currentUser._id)\n          this.currentUserLikes.map(like => {\n            return this.root.ps.posts.map(post => {\n              post.likedByCurrentUser = post.postedBy._id === like.user_id._id\n              !post.likes_amount ? post.likedByCurrentUser = false : post.likedByCurrentUser = true\n\n              return post\n            })\n          })\n\n        } else {\n          this.currentUserLikes = []\n        }\n      }, {fireImmediately: false}\n    )\n  }\n\n  @action\n  async getCurrentUserLikes(user_id: string) {\n    this.currentUserLikes = await this.likeAdapter.getUserLikes(user_id)\n\n\n  }\n\n\n  @action\n  async createLike(post: IPost): Promise<IlikeResponse> {\n    const\n      likeInput = {\n        user_id: this.root.log.currentUser._id,\n        post_id: post._id\n      };\n    return this.likeAdapter.createLike(likeInput);\n\n\n  }\n\n  @action\n  async unlike(like_id: string): Promise<IlikeResponse> {\n    return this.likeAdapter.unlike(like_id)\n\n\n  }\n\n  @action\n  async handleLike(post: IPost) {\n    const\n      postLikes: ILike[] = await this.root.likeStore.getPostLikes(post._id),\n      found: ILike       = postLikes.find(like => like.user_id._id === this.root.log.currentUser._id)\n    try {\n      if (found) {\n        const\n          likeToDelete: IlikeResponse = await this.unlike(found._id),\n          index: number               = this.currentUserLikes.indexOf(found);\n        this.currentUserLikes.splice(index, 1)\n        post.likes_amount = likeToDelete.postLikeCount\n        post.likedByCurrentUser = false\n\n      } else {\n        const newLike: IlikeResponse = await this.createLike(post)\n        console.log(newLike, 'newLike');\n        post.likes_amount = newLike.postLikeCount\n        post.likedByCurrentUser = true\n\n      }\n\n    } catch (e) {\n      console.log(e)\n    }\n\n\n  }\n\n  @action\n  async getPostLikes(post_id: string) {\n    return this.likeAdapter.getPostLikes(post_id);\n  }\n\n\n  @action\n  async checkedLikedPosts() {\n\n\n    this.root.ps.posts.forEach(post => {\n      this.currentUserLikes.forEach(like => {\n        if (post._id === like.post_id) {\n\n          post.likedByCurrentUser = true\n        }\n      })\n    })\n  }\n\n}\n\n","//region imports\nimport {Injectable}                   from '@angular/core';\nimport {action, computed, observable} from 'mobx-angular';\nimport {RootStore}                    from '../root.store';\nimport {IPost}                        from '../../../../../../../../shared/types/Entities/IPost';\nimport {PostAdapter}                  from \"../../adapters/post.adapter\";\nimport {MatDialog}                    from \"@angular/material/dialog\";\nimport {PostDialogBoxComponent}       from \"../../components/post-dialog-box/post-dialog-box.component\";\nimport {reaction}                     from \"mobx\";\nimport {PostImgDialogComponent}       from \"../../components/post-img-dialog/post-img-dialog.component\";\nimport {IUser}                        from \"../../../../../../../../shared/types/Entities/IUser\";\n\n\n//endregion\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostStore {\n  @observable posts: IPost[] = [];\n  @observable postImgUrl: string\n  @observable uploadEvent;\n  @observable postContent: string\n\n\n  constructor(\n    public root: RootStore,\n    private postAdapter: PostAdapter,\n    public dialog: MatDialog\n  ) {\n    this.root.ps = this;  //self-registration at root store\n    window['postStore'] = this;\n    reaction(\n      () => this.postContent,\n      async () => {\n        await this.createPost(this.postContent)\n      })\n\n    this.listenToUpdates()\n\n\n  }\n\n\n  @computed get userPosts() {\n    return this.posts\n      .filter((post: IPost) => {\n        return post.postedBy['_id'] === this.root.log.currentUser._id\n\n      })\n\n  }\n\n  @computed get filteredPosts() {\n    return this.root.fs.searchTerm ? this.posts.filter((post) => {\n\n      if (post.postedBy as IUser) {\n        return post.content.includes(this.root.fs.searchTerm) || post.postedBy.name.includes(this.root.fs.searchTerm)\n      }\n    }) : this.posts\n  }\n\n  async listenToUpdates() {\n    await this.postAdapter\n      .socketAdapter\n      .listenToEvent('postsUpdate', posts => {\n        this.posts = posts\n\n      })\n  }\n\n  @action\n  async getPosts() {\n    this.posts = await this\n      .postAdapter\n      .getPosts();\n\n\n  }\n\n  @action\n  async createPost(content: string) {\n    this.root.ups.loading = true\n\n    await this.postAdapter.createPost(this.root.log.currentUser._id, content, this.postImgUrl)\n    setTimeout(async () => {\n      await this.getPosts()\n      this.root.ups.loading = false\n    }, 3000)\n\n\n  }\n\n  @action\n  async deletePost(post: IPost) {\n    this.root.ups.loading = true\n    await this.postAdapter.deletePost(post._id);\n\n    setTimeout(async () => {\n      await this.getPosts()\n      this.root.ups.loading = false\n    }, 1500)\n\n\n  }\n\n\n  @action\n  async onImgPost(event) {\n    this.root.ups.loading = true\n    this.uploadEvent = event\n    this.postImgUrl = await this.root.ups.onFileUpload(this.uploadEvent)\n    this.root.ups.loading = false\n    await this.handleDialog()\n\n\n  }\n\n  @action\n  async handleDialog() {\n    const dialogRef = this.dialog.open(PostDialogBoxComponent, {data: this.postImgUrl})\n    this.postContent = await dialogRef.afterClosed().toPromise()\n    console.log(this.postContent)\n\n  }\n\n  openImgDialog(memeUrl: string) {\n    this.dialog.open(PostImgDialogComponent, {data: memeUrl})\n  }\n\n  @action\n  async updatePostContent(post_id: string, content: string) {\n    await this.postAdapter.updatePostContent(post_id, content)\n  }\n\n}\n","//region imports\nimport {Injectable}         from '@angular/core';\nimport {action, observable} from 'mobx-angular';\nimport {RootStore}          from '../root.store';\nimport {IUser}              from '../../../../../../../../shared/types/Entities/IUser';\nimport {UserAdapter}        from \"../../adapters/user.adapter\";\nimport {UploadAdapter}      from \"../../adapters/upload.adapter\";\nimport {UploadStore}        from \"../upload.store\";\nimport {NgIf}               from \"@angular/common\";\n\n/*import {MOCK_USERS}         from '../../../../../../../../shared/mock/MOCK_USERS';*/\n\n//endregion\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserStore {\n  /*useMock: boolean = false;*/\n  @observable public users: IUser[] = [];\n  @observable avatarUrl: string\n\n\n  constructor(\n    public root: RootStore,\n    private userAdapter: UserAdapter,\n    private uploadStore: UploadStore\n  ) {\n    this.root.us = this;\n    window['userStore'] = this;\n\n  }\n\n  @action\n  async getUsers(): Promise<IUser[]> {\n\n\n    return this.users = await this\n      .userAdapter\n      .getUsers();\n  }\n\n  @action\n  async onProfilePictureUpload(event) {\n    this.root.ups.loading = true\n    this.avatarUrl = await this.root.ups.onFileUpload(event)\n\n    if (this.root.log.currentUser) {\n      console.log('working')\n      this.root.log.currentUser.avatar = this.avatarUrl\n      const res = await this.updateProfilePicture()\n      this.root.ups.loading = false\n      console.log(res)\n    }\n    this.root.ups.loading = false\n  }\n\n  @action\n  async updateProfilePicture() {\n    await this.userAdapter.updateUserPhoto(this.root.log.currentUser._id, this.avatarUrl)\n  }\n\n\n}\n","//region imports\nimport {Injectable}    from '@angular/core';\nimport {UserStore}     from './entities/user.store';\nimport {PostStore}     from './entities/post.store';\nimport {LoginStore}    from './views/login.store';\nimport {LikeStore}     from './entities/like.store';\nimport {toJS}          from 'mobx';\nimport {FeedStore}     from './views/feed.store';\nimport {LayoutStore}   from \"./views/layout.store\";\nimport {SignupStore}   from \"./views/signup.store\";\nimport {AuthStore}     from \"./views/auth.store\";\nimport {BaseSocketAdapter} from \"../adapters/base-socket-adapter.service\";\nimport {UploadStore}   from \"./upload.store\";\n//endregion\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RootStore {\n  ps: PostStore;\n  us: UserStore;\n  log: LoginStore;\n  likeStore: LikeStore;\n  fs: FeedStore;\n  ls: LayoutStore;\n  sus: SignupStore;\n  as: AuthStore;\n  ups: UploadStore;\n\n\n  constructor() {\n    window['root'] = this;\n    window['js'] = data => toJS(data, {recurseEverything: true});\n  }\n}\n","//region imports\nimport {Injectable}         from \"@angular/core\";\nimport {action, observable} from \"mobx-angular\";\nimport {UploadAdapter}      from \"../adapters/upload.adapter\";\nimport {RootStore}          from \"./root.store\";\n//endregion\n\n\n@Injectable({\n  providedIn: \"root\"\n})\n\nexport class UploadStore {\n  @observable uploadUrl\n  @observable selectedFile: File;\n  @observable loading: boolean = false\n  formData: FormData = new FormData()\n\n  constructor(\n    private uploadAdapter: UploadAdapter,\n    public root: RootStore\n  ) {\n    this.root.ups = this;\n  }\n\n  @action\n  async onFileUpload(event): Promise<string> {\n    this.selectedFile = event.target.files[0]\n    this.formData.append('file', this.selectedFile, this.selectedFile.name)\n    try {\n      this.uploadUrl = await this.uploadAdapter.uploadPhoto(this.formData)\n      return this.uploadUrl\n    } catch (e) {\n      console.log(e)\n    }\n\n  }\n}\n","//region imports\nimport {Injectable}    from \"@angular/core\";\nimport {RootStore}     from \"../root.store\";\nimport {AuthAdapter}   from \"../../adapters/auth.adapter\";\nimport {action}        from \"mobx-angular\";\nimport {IUser}         from \"../../../../../../../../shared/types/Entities/IUser\";\nimport {toJS}          from \"mobx\";\nimport {IAuthResponse} from \"../../../../../../../../shared/types/IAuthResponse\";\n\n//endregion\n\n\n@Injectable({\n  providedIn: \"root\"\n})\n\nexport class AuthStore {\n\n  constructor(public root: RootStore,\n    private authAdapter: AuthAdapter) {\n    window['authStore'] = this;\n    this.root.as = this;\n    (async () => {\n      try {\n        await this.getCurrentUser()\n\n      } catch (e) {\n        console.log(e, 'e');\n      }\n    })()\n\n  }\n\n  async isAuthenticated(): Promise<boolean> {\n\n\n    return this.authAdapter.isAuthenticated()\n\n  }\n\n  @action\n  async getCurrentUser() {\n    this.root.log.currentUser = await this.authAdapter.getCurrentUser()\n\n  }\n\n}\n","//region imports\nimport * as dayjs                     from \"dayjs\";\nimport {Injectable}                   from '@angular/core';\nimport {RootStore}                    from '../root.store';\nimport {MatDialog}                    from '@angular/material/dialog';\nimport {action, computed, observable} from 'mobx-angular';\nimport {IPost}                        from '../../../../../../../../shared/types/Entities/IPost';\nimport {LikeDialogBoxComponent}       from '../../components/like-dialog-box/like-dialog-box.component';\nimport {ILike}                        from \"../../../../../../../../shared/types/Entities/ILike\";\nimport {autorun}                      from \"mobx\";\nimport {PostEditDialogComponent}      from \"../../components/post-edit-dialog/post-edit-dialog.component\";\n\n//endregion\n\n\n@Injectable({providedIn: 'root'})\n\n\nexport class FeedStore {\n  @observable postLikes: ILike[]\n  @observable searchTerm: string\n\n\n  constructor(public root: RootStore,\n    public dialog: MatDialog) {\n    window['feedStore'] = this;\n    this.root.fs = this;\n  }\n\n  @computed get dateFormattedLikes() {\n    return this.postLikes.map(like => {\n      return {\n        _id    : like._id,\n        created: dayjs(like.created).format('DD.MM.YYYY'),\n        user_id: like.user_id,\n        post_id: like.post_id\n      }\n    })\n  }\n\n  @action\n  async handLikesleDialog(post: IPost) {\n    this.postLikes = await this.root.likeStore.getPostLikes(post._id)\n\n    this.dialog.open(LikeDialogBoxComponent, {data: this.dateFormattedLikes});\n\n  }\n\n  @action\n  onSearch(value: string) {\n    setTimeout(() => {\n      this.searchTerm = value\n    }, 750)\n\n  }\n\n  @action\n  async handleEditPostDialog(post: IPost) {\n    const\n      dialogRef      = this.dialog.open(PostEditDialogComponent, {data: post}),\n      postNewContent = await dialogRef.afterClosed().toPromise();\n    this.root.ups.loading = true\n    await this.root.ps.updatePostContent(post._id, postNewContent)\n    post.content = postNewContent\n    this.root.ups.loading = false\n\n  }\n\n}\n","//region imports\nimport {Injectable}    from \"@angular/core\";\nimport {RootStore}     from \"../root.store\";\n\nimport {Router}        from \"@angular/router\";\n//endregion\n \n\n@Injectable({providedIn: \"root\"})\nexport class LayoutStore {\n\n\n  constructor(\n    public root: RootStore,\n    public router: Router) {\n    this.root.ls = this;\n    window['layoutStore'] = this;\n\n  }\n\n  async routeToFeed() {\n    await this.router.navigateByUrl('feed')\n  }\n\n  async routeToProfile() {\n    await this.router.navigateByUrl('profile')\n  }\n\n\n}\n","//region imports\nimport {Injectable}         from '@angular/core';\nimport {RootStore}          from '../root.store';\nimport {action, observable} from 'mobx-angular';\nimport {IUser}              from '../../../../../../../../shared/types/Entities/IUser';\nimport {Router}             from '@angular/router';\nimport {LoginAdapter}       from \"../../adapters/login.adapter\";\n//endregion\n \n\n\nexport interface ILoginDetails {\n  email: string,\n  password: string\n}\n\n@Injectable({providedIn: 'root'})\n\n\nexport class LoginStore {\n  @observable currentUser: IUser;\n  @observable loginError: string = ''\n\n  constructor(\n    public root: RootStore,\n    private router: Router,\n    private loginAdapter: LoginAdapter\n  ) {\n    window['loginStore'] = this;\n    this.root.log = this;\n\n  }\n\n\n  async verifyUser(loginDetails: ILoginDetails) {\n    return this.loginAdapter.login(loginDetails)\n\n\n  }\n\n  @action\n  async handleLogin(loginDetails: ILoginDetails) {\n    const details = {\n      email   : loginDetails.email.toLowerCase(),\n      password: loginDetails.password\n    }\n    try {\n      this.currentUser = await this.verifyUser(details)\n\n      await this.router.navigateByUrl('feed')\n\n\n    } catch (e) {\n      this.loginError = e.error.msg\n    }\n\n\n  }\n\n  @action\n  async handleLogout() {\n    await this.loginAdapter.logout()\n    this.currentUser = undefined\n    console.log('logged out')\n    await this.router.navigateByUrl('/login')\n\n  }\n\n  routeToSignUp() {\n    this.router.navigateByUrl('signup').then()\n  }\n\n\n}\n","//region imports\nimport {Injectable}              from \"@angular/core\";\nimport {RootStore}               from \"../root.store\";\nimport {action, observable}      from \"mobx-angular\";\nimport {Router}                  from \"@angular/router\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {UserAdapter}             from \"../../adapters/user.adapter\";\nimport {IUser}                   from \"../../../../../../../../shared/types/Entities/IUser\";\nimport {IUserResponse}           from \"../../../../../../../../shared/types/Entities/IUserResponse\";\nimport {logoutHandler}           from \"../../../../../../../../server2/ajax-handlers/login.handler\";\n\n//endregion\n\n\n@Injectable({providedIn: \"root\"})\n\n\nexport class SignupStore {\n  @observable errorMessage: string = ''\n\n\n  constructor(\n    public root: RootStore,\n    private router: Router,\n    private userAdapter: UserAdapter,\n    private http: HttpClient\n  ) {\n    this.root.sus = this;\n    window['signUpStore'] = this;\n  }\n\n  @action\n  async routeToLogin() {\n    await this.router.navigateByUrl('login')\n\n  }\n\n  @action\n  async handleSignUp(user: IUser) {\n    user.email = user.email.toLowerCase()\n    user.name = user.name.toLowerCase()\n    if (this.root.us.avatarUrl) {\n      user.avatar = this.root.us.avatarUrl\n    }\n\n    try {\n      const userResponse: IUserResponse = await this.userAdapter.createNewUser(user)\n      console.log(userResponse.isCreated, 'userResponse.isCreated');\n      if (!userResponse.isCreated) {\n        this.errorMessage = userResponse.msg\n        return\n      }\n      console.log(userResponse.msg)\n      await this.routeToLogin()\n    } catch (e) {\n      console.log(e)\n    }\n\n\n  }\n}\n\n","//region imports\nimport {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {FeedStore}                                  from '../../stores/views/feed.store';\nimport {iif}                                        from \"rxjs\";\nimport {toJS}                                       from \"mobx\";\nimport {PostStore}                                  from \"../../stores/entities/post.store\";\n\n//endregion\n\n\n@Component({\n  selector       : 'mem-feed',\n  templateUrl    : './feed.component.html',\n  styleUrls      : ['./feed.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n\n})\nexport class FeedComponent implements OnInit {\n\n  constructor(\n    public fs: FeedStore\n  ) {\n    window['feedComp'] = this;\n    (async () => {\n\n        try {\n          await this.fs.root.ps.getPosts()\n          console.log('got posts')\n        } catch (e) {\n          console.log('there was problem getting', e);\n        }\n\n\n      }\n    )();\n\n\n  }\n\n  async ngOnInit(): Promise<void> {\n    console.log('init')\n    await this.fs.root.ps.getPosts()\n  }\n\n}\n","<div class=\"feed-wrapper\">\n\n\n  <mem-post-box\n    [currentUserPhoto]=\"fs.root.log.currentUser.avatar\"\n    (newPost)=\"fs.root.ps.createPost($event)\"\n    (imgUpload)=\"fs.root.ps.onImgPost($event)\"\n    [postImgUrl]=\"fs.root.ps.postImgUrl\"\n  >\n\n  </mem-post-box>\n\n  <ng-container *mobxAutorun>\n    <div *ngIf=\"fs.root.ups.loading\">\n      <mat-spinner></mat-spinner>\n    </div>\n  </ng-container>\n\n  <div class=\"posts-container\" *mobxAutorun>\n    <mem-post\n      *ngFor=\"let post of fs.root.ps.filteredPosts\"\n      [post]=\"post\"\n      [currentUser]=\"fs.root.log.currentUser\"\n      (postDeleted)=\"fs.root.ps.deletePost($event)\"\n      (postLiked)=\"fs.root.likeStore.handleLike($event)\"\n      (dashboardClicked)=\"fs.handLikesleDialog($event)\"\n      (imgClicked)=\"fs.root.ps.openImgDialog($event)\"\n      (editClicked)=\"fs.handleEditPostDialog($event)\"\n    ></mem-post>\n  </div>\n</div>\n\n\n","//region imports\nimport {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {RootStore}                                  from '../../stores/root.store';\nimport {PostStore}                                  from '../../stores/entities/post.store';\nimport {UserStore}                                  from '../../stores/entities/user.store';\nimport {LoginStore}                                 from '../../stores/views/login.store';\nimport {LikeStore}                                  from '../../stores/entities/like.store';\nimport {FeedStore}                                  from '../../stores/views/feed.store';\nimport {LayoutStore}                                from \"../../stores/views/layout.store\";\nimport {SignupStore}                                from \"../../stores/views/signup.store\";\nimport {AuthStore}                                  from \"../../stores/views/auth.store\";\nimport {iif}                                        from \"rxjs\";\n\n//endregion\n\n\n@Component({\n  selector       : 'mem-layout',\n  templateUrl    : './layout.component.html',\n  styleUrls      : ['./layout.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LayoutComponent implements OnInit {\n\n  constructor(\n    public root: RootStore,\n    public ps: PostStore,\n    public us: UserStore,\n    public log: LoginStore,\n    public likeStore: LikeStore,\n    public fs: FeedStore,\n    public ls: LayoutStore,\n    public sus: SignupStore,\n    public as: AuthStore\n  ) {\n\n    //IIFE\n    (async () => {\n      if (this.log.currentUser) {\n        await this.ps.getPosts()\n      }\n    })()\n\n  }\n\n  ngOnInit(): void {\n  }\n}\n","<div class=\"app-wrapper\">\n\n  <ng-container *mobxAutorun>\n    <mem-navbar *ngIf=\"log.currentUser\"\n                (profileClick)=\"ls.routeToProfile()\"\n                (headerClick)=\"ls.routeToFeed()\"\n                (feedClick)=\"ls.routeToFeed()\"\n                (logoutClick)=\"ls.root.log.handleLogout()\"\n                [currentUser]=\"ls.root.log.currentUser\"\n                (onSearch)=\"ls.root.fs.onSearch($event)\"\n    ></mem-navbar>\n  </ng-container>\n\n\n  <div class=\"app-content\">\n    <router-outlet></router-outlet>\n  </div>\n\n</div>\n","//region imports\nimport {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Router}                                         from '@angular/router';\nimport {IUser}                                          from \"../../../../../../../../../shared/types/Entities/IUser\";\n\n//endregion\n\n\n@Component({\n  selector   : 'mem-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls  : ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  @Input() currentUser: IUser\n  @Output() profileClick = new EventEmitter()\n  @Output() feedClick = new EventEmitter()\n  @Output() logoutClick = new EventEmitter()\n  @Output() headerClick = new EventEmitter()\n  @Output() onSearch = new EventEmitter()\n\n  constructor(\n    private router: Router\n  ) {\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  profileClicked() {\n    this.profileClick.emit();\n  }\n\n  feedClicked() {\n    this.feedClick.emit();\n  }\n\n  headerClicked() {\n    this.headerClick.emit();\n  }\n\n  logoutClicked() {\n    this.logoutClick.emit();\n  }\n\n  searched(value) {\n    this.onSearch.emit(value)\n  }\n\n}\n","<div class=\"app-navbar\">\n\n  <div class=\"main-header\"\n       (click)=\"headerClicked()\">\n    <div class=\"main-title\">MEMEZ</div>\n    <img class=\"title-img\" src=\"../../../../assets/svg's/Trollface.svg\" alt=\"\">\n  </div>\n\n  <div class=\"navbar-search-input-wrapper\">\n    <input\n      #search_input\n      (keyup)=\"searched(search_input.value)\"\n      type=\"text\"\n      class=\"navbar-search-input\">\n    <mat-icon class=\"search-icon\">search</mat-icon>\n  </div>\n\n\n  <div class=\"welcome-menu-container\">\n    <div class=\"navbar-welcome\">\n      {{currentUser.name}}\n    </div>\n\n    <div class=\"navbar-profile-img\"\n         [matMenuTriggerFor]=\"profile_menu\"\n    >\n      <mem-profile-img\n        [url]=\"currentUser.avatar\"\n      >\n      </mem-profile-img>\n    </div>\n\n    <mat-menu #profile_menu=\"matMenu\">\n      <button\n        mat-menu-item\n        class=\"menu-button\"\n        (click)=\"profileClicked()\"\n      >profile\n      </button>\n      <button\n        mat-menu-item\n        class=\"menu-button\"\n        (click)=\"feedClicked()\"\n      >feed\n      </button>\n      <button\n        mat-menu-item\n        class=\"menu-button\"\n        (click)=\"logoutClicked()\"\n      >logout\n      </button>\n\n    </mat-menu>\n  </div>\n\n</div>\n","//region imports\nimport {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {LoginStore}                                 from '../../stores/views/login.store';\nimport {FormControl, FormGroup, Validators}         from \"@angular/forms\";\n//endregion\n \n\n@Component({\n  selector       : 'mem-login',\n  templateUrl    : './login.component.html',\n  styleUrls      : ['./login.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup\n\n  constructor(\n    public log: LoginStore,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      email   : new FormControl('',\n        [Validators.required,\n         Validators.email]),\n      password: new FormControl('',\n        [Validators.required, Validators.minLength(6)])\n    })\n\n  }\n\n  get email() {\n    return this.loginForm.get('email')\n  }\n\n  get password() {\n    return this.loginForm.get('password')\n  }\n\n\n}\n","<div class=\"login-wrapper\">\n  <div class=\"login-landing\">\n    <div class=\"main-title\">MEMEZ</div>\n    <img class=\"login-img\" src=\"./assets/svg's/Trollface.svg\" alt=\"\">\n\n  </div>\n  <form [formGroup]=\"loginForm\"\n        (ngSubmit)=\"log.handleLogin(loginForm.value)\"\n        class=\"login-form\">\n    <ng-container *mobxAutorun>\n      <div class=\"form-validation login\"\n           *ngIf=\"!!log.loginError\">\n        {{log.loginError}}\n      </div>\n    </ng-container>\n\n    <div class=\"form-wrapper\">\n      <h1 class=\"main-title\">Log in</h1>\n\n      <label for=\"email\"\n             class=\"form-label\">\n        Enter Email</label>\n      <input id=\"email\"\n             formControlName=\"email\"\n             type=\"email\" placeholder=\"enter your email\" class=\"signup-form-input\">\n\n      <label for=\"password\"\n             class=\"form-label\">\n        Enter password</label>\n      <input id=\"password\"\n             formControlName=\"password\"\n             type=\"password\" placeholder=\"enter your password\" class=\"signup-form-input\">\n\n      <button [disabled]=\"!loginForm.valid || loginForm.pristine\"\n              type=\"submit\"\n              class=\"submit-btn btn\">login\n      </button>\n\n      <div class=\"sign-up-button\">\n        New to MEMEZ ? <span class=\"sign-up-route\" (click)=\"log.routeToSignUp()\">sign up</span>\n      </div>\n    </div>\n  </form>\n</div>\n","//region imports\nimport {ChangeDetectionStrategy, Component, OnInit}      from '@angular/core';\nimport {SignupStore}                                     from \"../../stores/views/signup.store\";\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n//endregion\n\n\n@Component({\n  selector       : 'mem-sign-up',\n  templateUrl    : './sign-up.component.html',\n  styleUrls      : ['./sign-up.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SignUpComponent implements OnInit {\n  signupForm: FormGroup\n\n  constructor(\n    public sus: SignupStore,\n    public fb: FormBuilder\n  ) {\n    window['signupForm'] = this;\n  }\n\n  ngOnInit(): void {\n    this.signupForm = new FormGroup({\n      email   : new FormControl('',\n        [Validators.required,\n         Validators.email]),\n      name    : new FormControl('',\n        [Validators.required]),\n      password: new FormControl('',\n        [Validators.required, Validators.minLength(6)])\n    })\n\n  }\n\n  get email() {\n    return this.signupForm.get('email')\n  }\n\n  get name() {\n    return this.signupForm.get('name')\n  }\n\n  get password() {\n    return this.signupForm.get('password')\n  }\n\n\n}\n","<div class=\"sign-up-form\">\n\n\n  <div class=\"form-wrapper\">\n    <h1 class=\"main-title\">Sign up</h1>\n    <ng-container *mobxAutorun>\n      <div\n\n        class=\"signup-photo\">\n        <mem-profile-img\n          *ngIf=\"!sus.root.ups.loading\"\n          [url]=\"sus.root.us.avatarUrl\">\n        </mem-profile-img>\n        <mat-spinner *ngIf=\"sus.root.ups.loading\">\n        </mat-spinner>\n      </div>\n    </ng-container>\n\n    <form class=\"sign-up-form-form\"\n          [formGroup]=\"signupForm\" (ngSubmit)=\"sus.handleSignUp(signupForm.value)\">\n\n      <label\n        *mobxAutorun\n        for=\"photo-input\"\n        class=\"form-label btn\"\n        [class.disabled]=\"sus.root.log.currentUser\"\n      >\n        Upload Photo</label>\n\n      <input\n\n        id=\"photo-input\"\n        type=\"file\"\n        name=\"file\"\n        hidden\n\n        (change)=\"sus.root.us.onProfilePictureUpload($event)\"\n      >\n\n      <label for=\"email-input\"\n             class=\"form-label\">Email\n      </label>\n      <input formControlName=\"email\"\n             id=\"email-input\"\n             [ngClass]=\"{'valid' : email.valid && email.dirty}\"\n             type=\"email\" placeholder=\"enter your email\" class=\"signup-form-input\">\n      <div class=\"form-validation\"\n           *ngIf=\"!email.valid && (email.dirty || email.touched)\">\n        email is not valid\n      </div>\n\n      <label for=\"name-input\"\n             class=\"form-label\">Full name\n      </label>\n      <input formControlName=\"name\"\n             id=\"name-input\"\n             [ngClass]=\"{'valid' : name.valid && name.dirty}\"\n             type=\"text\" placeholder=\"enter your name\" class=\"signup-form-input\">\n      <div class=\"form-validation\"\n           *ngIf=\"!name.valid && (name.dirty || name.touched)\">\n        name is not valid\n      </div>\n\n      <label for=\"password-input\"\n             class=\"form-label\">Password</label>\n      <input formControlName=\"password\"\n             id=\"password-input\"\n             [ngClass]=\"{'valid' : password.valid && password.dirty}\"\n             type=\"password\" placeholder=\"create password\" class=\"signup-form-input\">\n      <div class=\"input-hint\">\n        *minimum 6 characters\n      </div>\n      <div class=\"form-validation\"\n           *ngIf=\"!password.valid && (password.dirty || password.touched)\">\n        password is not valid\n      </div>\n\n      <button\n        type=\"submit\"\n        class=\"submit-btn btn\"\n        [disabled]=\"!signupForm.valid || signupForm.pristine\"\n      >submit\n      </button>\n      <ng-container *mobxAutorun>\n        <div class=\"form-validation submitted\"\n             *ngIf=\"!!sus.errorMessage\">\n          {{sus.errorMessage}}\n        </div>\n      </ng-container>\n\n    </form>\n\n  </div>\n</div>\n","//region imports\nimport {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {UserStore}                                  from '../../stores/entities/user.store';\n//endregion\n\n\n\n@Component({\n  selector       : 'mem-user-profile',\n  templateUrl    : './user-profile.component.html',\n  styleUrls      : ['./user-profile.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UserProfileComponent implements OnInit {\n\n  constructor(public us: UserStore) {\n    (async ()=>{\n        await this.us.root.ps.getPosts()\n    })()\n\n  }\n\n  async ngOnInit(): Promise<void> {\n\n  }\n\n}\n","<div class=\"user-profile-wrapper\">\n\n\n  <div class=\"user-card\">\n    <div class=\"user-picture\" *mobxAutorun>\n      <mem-profile-img\n        *ngIf=\"!us.root.ups.loading\"\n        [url]=\"us.root.log.currentUser.avatar\"\n        (imgClicked)=\"us.root.ps.openImgDialog($event)\"\n      >\n      </mem-profile-img>\n      <mat-spinner\n        *ngIf=\"us.root.ups.loading\">\n      </mat-spinner>\n    </div>\n    <label for=\"photo-input\"\n           class=\"form-label btn\">\n      Change Profile Picture</label>\n\n    <input\n      id=\"photo-input\"\n      type=\"file\"\n      name=\"file\"\n      hidden\n      (change)=\"us.onProfilePictureUpload($event)\"\n    >\n\n\n    <div class=\"user-name\">\n      {{us.root.log.currentUser.name}}\n    </div>\n    <div class=\"user-details\">\n      {{us.root.log.currentUser.email}}\n    </div>\n\n  </div>\n\n\n  <div class=\"posts-container\" *mobxAutorun>\n    <mem-post\n      *ngFor=\"let post of us.root.ps.userPosts\"\n      [post]=\"post\"\n      [currentUser]=\"us.root.log.currentUser\"\n      (postDeleted)=\"us.root.ps.deletePost($event)\"\n      (postLiked)=\"us.root.likeStore.handleLike($event)\"\n      (dashboardClicked)=\"us.root.fs.handLikesleDialog($event)\"\n      (imgClicked)=\"us.root.ps.openImgDialog($event)\"\n      (editClicked)=\"us.root.fs.handleEditPostDialog($event)\"\n    ></mem-post>\n  </div>\n\n\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","//region imports\nimport {enableProdMode}         from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule}   from './app/app.module';\nimport {environment} from './environments/environment';\n//endregion\n\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n\n"],"sourceRoot":"webpack:///"}